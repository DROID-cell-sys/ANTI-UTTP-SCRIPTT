-- KRNL Auto Typer GUI Script - Mobile Friendly with Sky Background Image

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KRNLAutoTyperGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.CoreGui

-- Main Frame (Draggable manually for mobile)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 350, 0, 180)
mainFrame.Position = UDim2.new(0.5, -175, 0.5, -90)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundTransparency = 1 -- transparent because of image background
mainFrame.Parent = screenGui

-- UIScale for mobile responsiveness
local uiScale = Instance.new("UIScale")
uiScale.Scale = math.clamp(math.min(workspace.CurrentCamera.ViewportSize.X / 1080, workspace.CurrentCamera.ViewportSize.Y / 1920), 0.6, 1)
uiScale.Parent = mainFrame

-- Background Image (sky themed)
local bgImage = Instance.new("ImageLabel")
bgImage.Size = UDim2.new(1, 0, 1, 0)
bgImage.Position = UDim2.new(0, 0, 0, 0)
bgImage.BackgroundTransparency = 1
bgImage.Image = "rbxassetid://14228213084"
bgImage.ScaleType = Enum.ScaleType.Crop
bgImage.ZIndex = 0
bgImage.Parent = mainFrame

-- Container Frame to hold UI elements with slight background for readability
local container = Instance.new("Frame")
container.Size = UDim2.new(1, -20, 1, -20)
container.Position = UDim2.new(0, 10, 0, 10)
container.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
container.BackgroundTransparency = 0.4
container.BorderSizePixel = 0
container.ZIndex = 1
container.Parent = mainFrame

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Auto Typer"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 28
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.ZIndex = 2
titleLabel.Parent = container

-- TextBox for input text
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0.9, 0, 0, 60)
inputBox.Position = UDim2.new(0.05, 0, 0, 50)
inputBox.PlaceholderText = "Put your text here"
inputBox.ClearTextOnFocus = false
inputBox.TextWrapped = true
inputBox.TextXAlignment = Enum.TextXAlignment.Left
inputBox.Font = Enum.Font.Gotham
inputBox.TextSize = 20
inputBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
inputBox.TextColor3 = Color3.fromRGB(0, 0, 0)
inputBox.ZIndex = 2
inputBox.Parent = container

-- Speed Label
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0, 150, 0, 25)
speedLabel.Position = UDim2.new(0.05, 0, 0, 120)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed: 100 WPM"
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 18
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.ZIndex = 2
speedLabel.Parent = container

-- Speed Slider Frame
local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(0.7, 0, 0, 30)
sliderFrame.Position = UDim2.new(0.3, 0, 0, 120)
sliderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderFrame.BackgroundTransparency = 0.3
sliderFrame.BorderSizePixel = 0
sliderFrame.ZIndex = 2
sliderFrame.Parent = container

-- Slider Fill
local sliderFill = Instance.new("Frame")
sliderFill.Size = UDim2.new(0.3, 0, 1, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
sliderFill.ZIndex = 3
sliderFill.Parent = sliderFrame

-- Slider Button
local sliderButton = Instance.new("ImageButton")
sliderButton.Size = UDim2.new(0, 30, 1, 0)
sliderButton.Position = UDim2.new(0.3, -15, 0, 0)
sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderButton.BackgroundTransparency = 0.8
sliderButton.Image = "rbxassetid://3570695787"
sliderButton.ZIndex = 4
sliderButton.Parent = sliderFrame
sliderButton.Active = true
sliderButton.Selectable = true

-- Auto Type Button
local autoTypeButton = Instance.new("TextButton")
autoTypeButton.Size = UDim2.new(0.9, 0, 0, 50)
autoTypeButton.Position = UDim2.new(0.05, 0, 0, 165)
autoTypeButton.BackgroundColor3 = Color3.fromRGB(65, 105, 225)
autoTypeButton.Font = Enum.Font.GothamBold
autoTypeButton.TextSize = 24
autoTypeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
autoTypeButton.Text = "Auto Type"
autoTypeButton.ZIndex = 2
autoTypeButton.Parent = container

-- Variables
local minSpeed = 1
local maxSpeed = 323
local currentSpeed = 100

local function updateSpeed(newSpeed)
    currentSpeed = math.clamp(newSpeed, minSpeed, maxSpeed)
    speedLabel.Text = "Speed: "..math.floor(currentSpeed).." WPM"
    local fillPercent = (currentSpeed - minSpeed) / (maxSpeed - minSpeed)
    sliderFill.Size = UDim2.new(fillPercent, 0, 1, 0)
    sliderButton.Position = UDim2.new(fillPercent, -15, 0, 0)
end

updateSpeed(currentSpeed)

-- Slider drag handling (mouse + touch)
local dragging = false

sliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local mousePos = UserInputService:GetMouseLocation()
        local sliderPos = sliderFrame.AbsolutePosition
        local sliderSize = sliderFrame.AbsoluteSize
        local relativeX = math.clamp(mousePos.X - sliderPos.X, 0, sliderSize.X)
        local percent = relativeX / sliderSize.X
        local newSpeed = minSpeed + percent * (maxSpeed - minSpeed)
        updateSpeed(newSpeed)
    end
end)

-- Draggable mainFrame for mobile (manual drag)
local draggingFrame = false
local dragInput, dragStart, startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    local newX = startPos.X.Offset + delta.X
    local newY = startPos.Y.Offset + delta.Y

    -- Clamp to screen bounds
    local maxX = workspace.CurrentCamera.ViewportSize.X - mainFrame.AbsoluteSize.X
    local maxY = workspace.CurrentCamera.ViewportSize.Y - mainFrame.AbsoluteSize.Y
    newX = math.clamp(newX, 0, maxX)
    newY = math.clamp(newY, 0, maxY)

    mainFrame.Position = UDim2.new(0, newX, 0, newY)
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingFrame = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingFrame = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if draggingFrame and input == dragInput then
        updateInput(input)
    end
end)

-- Button press animation
local function animateButton()
    local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
    local tweenSmall = TweenService:Create(autoTypeButton, tweenInfo, {Size = UDim2.new(0.85, 0, 0, 50)})
    local tweenBig = TweenService:Create(autoTypeButton, tweenInfo, {Size = UDim2.new(0.9, 0, 0, 50)})

    tweenSmall:Play()
    tweenSmall.Completed:Wait()
    tweenBig:Play()
end

-- Typing function using KRNL keypress and clipboard fallback
local function autoType(text, wpm)
    local cps = (wpm * 6) / 60
    local delay = 1 / cps

    for i = 1, #text do
        local char = text:sub(i, i)
        local upperChar = char:upper()
        local keyCode = Enum.KeyCode[upperChar]

        if keyCode and #char == 1 and char:match("%a") then
            -- Letter keys
            pcall(function()
                keypress(keyCode)
                wait(0.01)
                keyrelease(keyCode)
            end)
        else
            -- For other characters, use clipboard paste fallback
            pcall(function()
                setclipboard(char)
                keypress(Enum.KeyCode.LeftControl)
                keypress(Enum.KeyCode.V)
                wait(0.01)
                keyrelease(Enum.KeyCode.V)
                keyrelease(Enum.KeyCode.LeftControl)
            end)
        end
        wait(delay)
    end
end

autoTypeButton.MouseButton1Click:Connect(function()
    local textToType = inputBox.Text
    if textToType == "" then return end

    animateButton()
    coroutine.wrap(function()
        autoType(textToType, currentSpeed)
    end)()
end)
